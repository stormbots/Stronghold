// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



package org.usfirst.frc2811.Stronghold2016.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class AutonomousCrossLowAndShoot extends CommandGroup {

    public AutonomousCrossLowAndShoot() {
    	//This should be helpful! 
    	// Selecting autonomous modes via Smart Dashboard
    	// https://wpilib.screenstepslive.com/s/4485/m/26401/l/255419-choosing-an-autonomous-program-from-smartdashboard
    	
    		
    		/*
    	// 	Group A: Porticulis = 1, Cheval de Frise = 2
    	// 	Group B: Ramparts = 3, Moat = 4
    	// 	Group C: Drawbridge = 5, Sally Port = 6
    	// 	Group D: Rock Wall = 7, Rough Terrain = 8
    	// 	Low Bar = 9
    	// 	Positions: [1][2][3][4][5]
    	*/
    	addSequential(new ShiftGearsLow());
    	addSequential(new IntakeHoming()); 
    	addSequential(new SketchyDrive(.5,0.55));
    	addSequential(new Wait(.5));
    	addSequential(new IntakeLifterAngle(0));
    	addSequential(new Wait(.5));
    	addSequential(new SketchyDrive(0.75,0.8,1.75));
    	addSequential(new Wait(2));
    	addSequential(new SketchyDrive(0.45,0,.7));
    	addSequential(new SketchyDrive(0.5,0.55,0.5));
    	
    	addSequential(new IntakeAdjustBallPosition(-.25,0.5),0.25);
    	addSequential(new Wait(.125));
    	//addSequential(new IntakeAdjustBallPosition(.25,2),.25);	
    		
    	
    	//addSequential(new AlignToTarget(),.1); //get vision code if applicable
    	//addSequential(new SetShooterDistance());	//spin shooter to align for target
    	addSequential(new ShooterSetSpeedForMidPowerShot(3),2);
    	addSequential(new Wait(2));
    	addSequential(new ShootBall(1),3);	//Disable intake forward stops and spin the ball inward
    	addSequential(new ShooterOff());
    	addSequential(new IntakeOff());
    	
    	//addSequential(new IntakeHoming());
    	    	
    }

   
}
