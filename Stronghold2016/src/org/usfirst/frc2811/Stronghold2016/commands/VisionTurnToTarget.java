// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2811.Stronghold2016.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2811.Stronghold2016.Robot;

/**
 *
 */
public class VisionTurnToTarget extends Command {

	    
    public VisionTurnToTarget(){
    	
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	
    	SmartDashboard.putBoolean("Detecting Target...", true);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	// Robot.vision.targetDetected()
    	double offset = Robot.vision.centerOffsetThing();

    	SmartDashboard.putNumber("Vision Target", offset);
    	SmartDashboard.putBoolean("Vision Have Target", Robot.vision.targetDetected());
    	
    	System.err.printf("Target offset is %.3f \n",offset);
    	
    	if( ! Robot.vision.targetDetected() ){
    		Robot.chassis.chassisDrive.setLeftRightMotorOutputs(0, 0);
    	}
    	else if (offset < 0) {
    		Robot.chassis.chassisDrive.setLeftRightMotorOutputs(0, .5);
    	} else if (offset > 0) {
    		Robot.chassis.chassisDrive.setLeftRightMotorOutputs(.5, 0);
    		// turn right
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	// if we're less than 15 pixels off, we're close enough
    	return Robot.vision.targetDetected() && Math.abs(Robot.vision.centerOffsetThing()) < 15;
        //return Robot.chassis.isOnTarget();
    }

    // Called once after isFinished returns true
    protected void end() {
		Robot.chassis.chassisDrive.setLeftRightMotorOutputs(0, 0);
    	SmartDashboard.putBoolean("Detecting Target...", false);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	SmartDashboard.putBoolean("Detecting Target...", false);

    }
}
